basePath: /api
definitions:
  model.UserRequest:
    properties:
      email:
        type: string
      name:
        type: string
      password:
        type: string
    required:
    - email
    - name
    type: object
  model.UserResponse:
    properties:
      created_at:
        example: "2024-01-01T00:00:00Z"
        type: string
      email:
        example: lQwLd@example.com
        type: string
      id:
        example: 1
        type: integer
      name:
        example: John Doe
        type: string
      updated_at:
        example: "2024-01-01T00:00:00Z"
        type: string
    type: object
host: localhost:8080
info:
  contact: {}
  description: This is a sample api.
  title: Go-Clean Example API
  version: "1.0"
paths:
  /auth/register:
    post:
      consumes:
      - application/json
      description: Register User
      parameters:
      - description: register user
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/model.UserRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.UserResponse'
      summary: Register User
      tags:
      - Auth
  /users:
    get:
      consumes:
      - application/json
      description: List User
      parameters:
      - description: page
        in: query
        name: page
        type: integer
      - description: size
        in: query
        name: size
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.UserResponse'
      summary: List User
      tags:
      - User
    post:
      consumes:
      - application/json
      description: Create User
      parameters:
      - description: user request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/model.UserRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.UserResponse'
      summary: Create User
      tags:
      - User
  /users/{id}:
    delete:
      consumes:
      - application/json
      description: Delete User
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: user deleted
          schema:
            type: string
      summary: Delete User
      tags:
      - User
    get:
      consumes:
      - application/json
      description: Detail User
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.UserResponse'
      summary: Detail User
      tags:
      - User
    put:
      consumes:
      - application/json
      description: Update User
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: string
      - description: user request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/model.UserRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.UserResponse'
      summary: Update User
      tags:
      - User
swagger: "2.0"
